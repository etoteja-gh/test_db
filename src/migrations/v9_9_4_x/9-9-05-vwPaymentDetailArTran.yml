databaseChangeLog:
- changeSet:
    id: 1
    author: Joanna
    dbms: mssql
    changes:
    - createView:
        fullDefinition: false
        replaceIfExists: true
        viewName: vwPaymentDetailArTran
        selectQuery: |
            select ('PD' + CAST(pd.id AS varchar(1000))) as 'sourceId', p.CustId as 'custId' , p.id as 'paymentId',
            pd.ArTranType as 'pdArTranType' , pd.Amount as 'pdAmount', pd.DiscAmount as 'pdDiscAmount', pd.PayAmount as 'pdPayAmount', pd.id as 'pdId' ,
            pd.refnum as 'refnum', pd.custNum as 'custNum', pd.custAccountNum as 'custAccountNum',
            tt.Name as 'tTranType', t.amount as 'tAmount', t.origAmount as 'tOrigAmount', t.discAmount as 'tDiscAmount',
            t.match6 as 'tPoNum',   t.tranDate as 'tTranDate', t.dueDate as 'tDueDate', t.id as 'tranId', null as 'state', 0 as 'isPending'
            from PaymentDetail pd with (nolock)
            inner JOIN Payment p  with (nolock) on p.id=pd.PaymentId
            left outer JOIN ArTranMatch t  with (nolock) on pd.arTranId=t.ArTranTypeId
            left outer JOIN ArTranType tt  on tt.id=t.id


            UNION
            select ('TR'+ CAST(t.id AS varchar(1000))) as 'sourceId', t.custId, null,
            null , null, null, null, null,
            t.refnum, t.custNum, ca.num,
            isNull(tt.Name, 'IN'),  t.amount-isnull((select sum(pd.amount) from Paymentdetail pd with (nolock), Payment p with (nolock) where pd.arTranId=t.id and p.id=pd.paymentId and p.arPostedDate is not null),0) as 'tAmount', t.origAmount, t.discAmount, t.match6 as 'tPoNum',
            t.tranDate as 'tTranDate', t.dueDate as 'tDueDate', t.id as 'tranId', t.state,  (case when  p.id is null then 0 else 1 end ) as 'isPending'
            from   ArTranMatch  t  with (nolock)
            LEFT OUTER  JOIN ArTranType tt  on tt.id=t.ArTranTypeId
            LEFT OUTER  JOIN ArTranPending p  on p.id=t.id
            LEFT OUTER JOIN CustAccount ca  on ca.id=t.custAccountId

- changeSet:
    id: 2
    author: Joanna
    dbms: mysql
    changes:
    - createView:
        fullDefinition: false
        replaceIfExists: true
        viewName: vwPaymentDetailArTran
        selectQuery: |
            select CONCAT('PD', CAST(pd.id AS CHAR)) as 'sourceId', p.CustId as 'custId' , p.id as 'paymentId',
            pd.ArTranType as 'pdArTranType' , pd.Amount as 'pdAmount', pd.DiscAmount as 'pdDiscAmount', pd.PayAmount as 'pdPayAmount', pd.id as 'pdId' ,
            pd.refnum as 'refnum', pd.custNum as 'custNum', pd.custAccountNum as 'custAccountNum',
            tt.Name as 'tTranType', t.amount as 'tAmount', t.origAmount as 'tOrigAmount', t.discAmount as 'tDiscAmount',
            t.match6 as 'tPoNum',   t.tranDate as 'tTranDate', t.dueDate as 'tDueDate', t.id as 'tranId', null as 'state', 0 as 'isPending'
            from PaymentDetail pd
            inner JOIN Payment p   on p.id=pd.PaymentId
            left outer JOIN ArTranMatch t   on pd.arTranId=t.ArTranTypeId
            left outer JOIN ArTranType tt  on tt.id=t.id

            UNION
            select CONCAT('TR', CAST(t.id AS CHAR)) as 'sourceId', t.custId, null,
            null , null, null, null, null,
            t.refnum, t.custNum, ca.num,
            ifnull(tt.Name, 'IN'),  t.amount-ifnull((select sum(pd.amount) from PaymentDetail pd  , Payment p   where pd.arTranId=t.id and p.id=pd.paymentId and p.arPostedDate is not null),0) as 'tAmount', t.origAmount, t.discAmount, t.match6 as 'tPoNum',
            t.tranDate as 'tTranDate', t.dueDate as 'tDueDate', t.id as 'tranId', t.state,  (case when  p.id is null then 0 else 1 end ) as 'isPending'
            from   ArTranMatch  t
            LEFT OUTER  JOIN ArTranType tt  on tt.id=t.ArTranTypeId
            LEFT OUTER  JOIN ArTranPending p  on p.id=t.id
            LEFT OUTER JOIN CustAccount ca  on ca.id=t.custAccountId
